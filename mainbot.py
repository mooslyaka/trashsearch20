import telebot
from telebot import types
import sqlite3
from os import path
import datetime

bot = telebot.TeleBot("7137374641:AAHuBp-BIcG6QiIaS7pDkCLzPG-UCjlAZao")

con = sqlite3.connect("trash_search_db.sql", check_same_thread=False)
cur = con.cursor()


def check_fine(message):
    fine = cur.execute("""SELECT fine FROM Users WHERE tg_id=(?)""", (message.from_user.id,)).fetchone()
    fine = int(str(fine)[1:-2])
    if fine >= 5:
        bot.send_message(message.chat.id, "–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã")
        return True


@bot.message_handler(commands=["start"])
def start(message):
    tg_id = cur.execute("""SELECT tg_id FROM Users WHERE tg_id=(?)""", (message.from_user.id,)).fetchall()
    if not tg_id:
        result = cur.execute("""INSERT INTO Users(tg_id) VALUES(?)""", (message.from_user.id,))
    if not check_fine(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–ö–æ–Ω–µ—á–Ω–æ!"))
        bot.send_message(message.chat.id,
                         f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}, –∂–µ–ª–∞–µ—Ç–µ –ª–∏ –≤—ã –Ω–∞—á–∞—Ç—å –ø–æ–º–æ–≥–∞—Ç—å –≥–æ—Ä–æ–¥—É?",
                         reply_markup=markup)
        bot.register_next_step_handler(message, main_menu)
        con.commit()


def stats(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back_button = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥üîô")
    markup.add(back_button)
    trash_count = str(
        cur.execute("""SELECT count_trash FROM Users WHERE tg_id=(?)""", (message.from_user.id,)).fetchone())[1:-2]
    fine = str(cur.execute("""SELECT fine FROM Users WHERE tg_id=(?)""", (message.from_user.id,)).fetchone())[1:-2]
    bot.send_message(message.chat.id, f"""–í–æ—Ç –≤–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, {message.from_user.first_name}:
    –ó–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–∏–Ω—è—Ç–æ: {trash_count}
    –®—Ç—Ä–∞—Ñ–æ–≤: {fine}""", reply_markup=markup)


def main_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    go_button = types.KeyboardButton(text="–ü–æ–º–æ—á—å –≥–æ—Ä–æ–¥—Éüå≥")
    stat_button = types.KeyboardButton(text="–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞üìä")
    markup.add(go_button, stat_button)
    bot.send_message(message.chat.id, "–≠—Ç–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –û—Ç—Å—é–¥–∞ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.",
                     reply_markup=markup)


def yes(message):
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    back = types.KeyboardButton(text="–û—Ç–º–µ–Ω–∞‚ùå")
    markup.add(back)
    bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –Ω–µ—É–±—Ä–∞–Ω–Ω–æ–π –º—É—Å–æ—Ä–∫–∏", reply_markup=markup)


def write_coord(longitude, latitude):
    with open("all_coordinates.txt", "a") as file:
        file.write(f" {str(longitude)} {str(latitude)} {datetime.datetime.now()}\n")


@bot.message_handler(content_types=["location"])
def check_geo(message):
    if not check_fine(message):
        markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        back = types.KeyboardButton(text="–û—Ç–º–µ–Ω–∞‚ùå")
        markup.add(back)
        bot.send_message(message.chat.id,
                         f"–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –ø—Ä–∏–Ω—è—Ç–∞! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—ë –Ω–∞ —Å–∞–π—Ç–µ: https://moosly.pythonanywhere.com/")
        write_coord(message.location.longitude, message.location.latitude)
        count_trash = cur.execute("""SELECT count_trash FROM Users WHERE tg_id=(?)""",
                                  (message.from_user.id,)).fetchone()
        count_trash = int(str(count_trash)[1:-2]) + 1
        cur.execute("""UPDATE Users SET count_trash=(?) WHERE tg_id=(?)""", (count_trash, message.from_user.id))
        con.commit()
        start(message)


@bot.message_handler(func=lambda m: True, content_types=["photo"])
def image(message):
    if not check_fine(message):
        file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        src = file_info.file_path
        with open("all_coordinates.txt", "a") as file:
            file.write(f"{src}")
        if path.exists(src):
            bot.send_message(message.chat.id, "+1 —à—Ç—Ä–∞—Ñ")
            fine = cur.execute("""SELECT fine FROM Users WHERE tg_id=(?)""", (message.from_user.id,)).fetchone()
            fine = int(str(fine)[1:-2]) + 1
            cur.execute("""UPDATE Users SET fine=(?) WHERE tg_id=(?)""", (fine, message.from_user.id))
            con.commit()
            bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ")
        else:
            with open(src, "wb") as new_file:
                new_file.write(downloaded_file)
            markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            button_geo = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µüåè", request_location=True)
            back = types.KeyboardButton(text="–û—Ç–º–µ–Ω–∞‚ùå")
            markup.add(button_geo, back)
            bot.send_message(message.chat.id, "–í–∞—à–µ —Ñ–æ—Ç–æ –ø—Ä–∏–Ω—è—Ç–æ, —Ç–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∞–∏—é",
                             reply_markup=markup)


@bot.message_handler(content_types=["text"])
def text(message):
    if message.text == "–û—Ç–º–µ–Ω–∞‚ùå":
        bot.send_message(message.chat.id, "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        main_menu(message)
    if message.text == "–ü–æ–º–æ—á—å –≥–æ—Ä–æ–¥—Éüå≥":
        yes(message)
    if message.text == "–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞üìä":
        stats(message)
    if message.text == "–ù–∞–∑–∞–¥üîô":
        main_menu(message)


bot.polling(none_stop=True)
